#!/bin/bash

# Generate a token, if one doesn't exists
TOKEN_FILE=$(dirname $0)/.github-access-token
TOKEN=$(cat $TOKEN_FILE 2> /dev/null)

if [ "$TOKEN" = "" ]; then
  echo -n "github username: "
  read GITHUB_USERNAME
  curl -u $GITHUB_USERNAME -d "{\"scopes\": [\"repo\", \"public_repo\"], \"note\": \"post-commit-pr-$RANDOM\"}" \
    https://api.github.com/authorizations  | grep '"token":' | sed 's/.*: "//' | sed 's/",$//' > $TOKEN_FILE
fi

TOKEN=$(cat $TOKEN_FILE 2> /dev/null)
if [ "$TOKEN" = "" ]; then
  echo "Couldn't get github access token, something went wrong"
  exit
fi

MSG=$(git show -s --format=%B)
TITLE=$(git show -s --format=%s)
REMOTE_BRANCH=$(echo $MSG | grep 'GH-PR-BRANCH:' | sed s'/.*GH-PR-BRANCH: *\(.*\)/\1/')

# No branch, create one and update commit
if [ "$REMOTE_BRANCH" = "" ]; then
  REMOTE_BRANCH=$USER/$RANDOM
  AMENDED_MSG="$MSG

GH-PR-BRANCH: $REMOTE_BRANCH"
  git commit --amend -m "$AMENDED_MSG"

  CREATE_PR="yes"
fi

REMOTE_BASE=${REMOTE_BRANCH}-base

# Push branch and base
git push -f origin HEAD:refs/heads/$REMOTE_BRANCH
git push -f origin $(git show -s --format=%H HEAD~1):refs/heads/$REMOTE_BASE

# Create new PR Existing PR
if [ "$CREATE_PR" = "yes" ]; then
  # Crazy '//' syntax is bash ANSI-C quoting http://stackoverflow.com/a/7218905
  BODY=${MSG//$'\n'/\\n}
  ENDPOINT=$(git config --get remote.origin.url | sed 's/.*://' | sed 's/.git$//')

  curl -X POST -H 'Authorization: token 9234dd785e82b69cf52dd46ba5a0900c4cc19a65' \
  curl -s -S -X POST -H "Authorization: token $TOKEN" \
      -H 'Content-Type: application/json' \
      -d "{\"title\": \"$TITLE\", 
           \"head\": \"$REMOTE_BRANCH\", 
           \"base\": \"$REMOTE_BASE\", 
           \"body\": \"$BODY\"}" \
      https://api.github.com/repos/$ENDPOINT/pulls > /dev/null

  if [ $? ]; then
    echo "Failed to create pull request"
  fi
fi
